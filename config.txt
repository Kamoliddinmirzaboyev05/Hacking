// Savollar va javoblar bazasi

const questionsAndAnswers = {
 "Pythonda ro'yxat (list) va kortej (tuple) o'rtasidagi asosiy farq nima?": "List o‘zgartiriladi, tuple o‘zgartirilmaydi",
  "Roʻyxat yoki kortejdagi elementga indeks boʻyicha qanday murojaat qilish mumkin?": "element = my_list[indeks]",
  "Quyidagilardan qaysi biri kortejlarga tegishli?": "(1, 2, 3)",
  "Roʻyxat oxiriga element qoʻshishning toʻgʻri yoʻli qanday?": "append()",
  "Quyidagi usullardan qaysi biri roʻyxatdagi oxirgi elementni olib tashlaydi va uni qaytaradi?": "pop()",
  "Pythonda ro'yxat yoki kortejdagi elementlar sonini qaysi funksiya orqali aniqlash mumkin?": "len()",
  "Ro‘yxat yoki kortejda muayyan elementning indeksini qaysi funksiyadan foydalanib topish mumkin?": "index()",
  "Pythonda quyidagilardan qaysi biri kortejga misol bo'ladi?": "(1, 2, 3)",
  "Pythonda bo'sh ro'yxatni qanday e’lon qilish mumkin?": "my_list = []",
  "Pythondagi ro'yxatda element mavjudligini tekshirishning to'g'ri usuli qanday?": "if element in my_list:",
  "Pythonda ro'yxatning oxirgi elementiga qanday murojaat qilish mumkin?": "my_list[-1]",
  "Pythonda bo'sh to'plamni yaratishning to'g'ri yo'li qanday?": "set()",
  "Pythonda to'plam (sets) nima?": "Unikal va tartibsiz elementlar to‘plami",
  "Quyidagi dastur natijasini aniqlang. \nmy_list = {\"1\", \"2\", \"3\"}\nprint(my_list[1])": "Xatolik",
  "Quyidagi dastur natijasini aniqlang. \nmy_list = (\"1\", \"2\", \"3\")\nprint(my_list[1])": "2",
  "Quyidagi dastur natijasini aniqlang.\ndict1 = {\"key1\":1, \"key2\":2}\ndict2 = {\"key2\":2, \"key1\":1}\nif dict1 == dict2:\n    print(dict1.get('key1'))\nelif dict1 != dict2:\n    print(dict1.get('key2'))\nelse:\n    print(type(dict1))": "1",
  "Berilgan lug’atni kamayish tartibida saralash to’g’ri ko’rsatilgan javobni ko’rsating. \ndictionary = {\"a\": 1, \"b\": 2, \"c\": 3}": "dictionary = dict(sorted(dictionary.items(), reverse=True))",
  "Quyidagi dastur natijasini aniqlang.\nfor i in range(5):\n  if i % 2 == 0:\n    continue\n  print(i, end=\" \")": "1 3",
  "Quyidagi Python o’zgaruvchilaridan qaysi biri to’g’ri e’lon qiligan?": "my_var = 10",
  "Quyidagi Python o’zgaruvchilaridan qaysi biri noto’g’ri e’lon qiligan?": "2my_var = 10",
  "Quyidagi dastur natijasini aniqlang.\\n{1,2,3,4}=={1,4,3,2}\\n{1,2,3,4}>{1,2,3,'4'}": "True\\nTypeError",
  "Quyidagi dastur natijasini aniqlang.\\nmy_tuple = (1, 2, 3, 4, 5)\\nprint(my_tuple[-2])": "4",
  "Quyidagi dastur natijasini aniqlang.\\nmy_var = [1, 2, 3, 4, 5]\\nprint(my_var[1:3])": "[2, 3]",
  "myVar nomli o'zgaruvchining tipini qanday tekshirish mumkin?": "type(myVar)",
  "Ro'yxatlar bilan ishlashda belgilangan joyga element qo'shish uchun mo'ljallangan funksiyani ko'rsating.": "insert()",
  "Kortej to'g'ri e'lon qilingan javobni aniqlang.": "my_tuple = (1, 2, 3)",
  "Quyidagi dastur natijasini aniqlang.\\nx = (\"650-21\", \"651-21\", \"652-21\")\\ny[1] = \"653-21\"\\nprint(x)": "TypeError",
  "Quyidagi kodning natijasi qanday bo’ladi?\\nmy_list = (1, 2, 3)\\nmy_list.append(4)": "AttributeError",
  "To'plam to'g'ri e'lon qilingan qatorni aniqlang.": "my_set = {1, 2, 3}",
  "Ikki yoki undan ortiq toʻplamlar orasidagi farqni oʻz ichiga olgan toʻplamni qaytaradigan funksiyani ko'rsating.": "difference()",
  "To'plamga yangi element qo'shish uchun qaysi funksiyadan foydalanish mumkin?": "add()",
  "Quyidagi dasturning natijasini aniqlang.\\nx = {\"Windows\", \"Linux\", \"Android\"}\\ny = {\"Google\", \"Microsoft\", \"Windows\"}\\nx.symmetric_difference_update(y)": "x = {'Google', 'Microsoft', 'Linux', 'Android'}",
  "Quyidagi dastur natijasini aniqlang.\\nset1 = {\"a\", \"b\" , 2}\\nset2 = {1, 2, 3}\\nset3 = set1.union(set2)": "{1, 2, 3, 'a', 'b'}",
  "Quyidagi dastur natijasini aniqlang.\\nthisset = {\"Windows\", \"Linux\", \"Android\"}\\nx = thisset.pop()\\nprint(x)": "To'plam tartibsiz — istalgan element chiqishi mumkin",
  "Quyidagi dastur natijasini aniqlang.\\nx = {\"Windows\", \"Linux\", \"Android\"}\\ny = {\"Google\", \"Microsoft\", \"Windows\"}\\nx.intersection_update(y)": "x = {'Windows'}",
  "... - tartibsiz, oʻzgarmas va indekslanmagan. Takroriy elementlar yo'q.": "frozenset",
  "... - bu tartiblangan va o'zgarmas to'plam. Takroriy elementlarga ruxsat beradi.": "tuple",
  "... - bu tartiblangan va o'zgaruvchan to'plam. Takroriy elementlarga ruxsat beradi.": "list",
  "Quyidagi dastur natijasini aniqlang.\\nset1={4,'v',6.9,4.0,'e'}\\nprint(set1)": "{4, 'v', 6.9, 'e'}",
  "Quyidagilardan qaysi biri to'plamlar (sets) qiymatlarini o'chirish uchun ishlatilmaydi?": "del()",
  "... - funksiyasi lug'atdagi har bir elementni ro'yxatdagi kortejlar sifatida qaytaradi": "items()",
  "Oxirgi kiritilgan kalit-qiymat juftligini olib tashlaydi": "popitem()",
  "Quyidagi dastur natijasini aniqlang.\\nthisdict = {\"1\": 123,\"2\": 1,\"3\": 3}\\nprint(sum(thisdict.keys()))": "TypeError",
  "Quyidagi dastur natijasini aniqlang.\\nthisdict = {\"1\": 123,\"2\": 1,\"3\": 3}\\nprint(sum(thisdict.values()))": "127",
  "Pythonda yangi lug'at yaratish quyidagilardan qaysi birida to’g’ri bajarilgan?": "my_dict = {}",
  "Python lug'atiga kalit-qiymat juftligini qo'shish uchun to'g'ri sintaksis qanday?": "my_dict[\"kalit\"] = \"qiymat\"",
  "Python lug'atida berilgan kalit bilan bog'langan qiymatni olish uchun to'g'ri sintaksisni ko'rsating.": "my_dict.get(\"kalit\")",
  "Quyidagi dastur natijasini aniqlang.\\ncount = 0\\nwhile True:\\n    print(count, end=\" \")\\n    count += 1\\n    if count >= 5:\\n        break": "0 1 2 3 4",
  "Quyidagi dastur natijasini aniqlang.\\nfor x in range(2, 10, 3):\\n  print(x, end=\" \")": "2 5 8",
  "Quyidagi dastur natijasini aniqlang.\\ngrades = [1, 2, 3, 4, 5]\\nfor grade in grades[::]:\\n    if grade>4 in grades[1:4]:\\n        print(f\"Your grade: {grade}\")\\n    else:\\n        pass": "Your grade: 5",
"a = [1, 2, 3]\nwhile a:\n    print(a.pop(), end=' ')\nelse:\n    print('Salom')" : "3 2 1 Salom",
"n=5\nwhile(n):\n    n=n-1\n    print(n,end=' ')" : "4 3 2 1 0 ",
"print(list(range(-3,9,3)))" : "[-3, 0, 3, 6]",
"for i in range(5):\n    if(i%2):print(i,end=' ')" : "1 3 ",
"c=0\nfor i in 'abc xyz':\n    c=c+1\nprint(c)" : "7",
"list1=[1,2,3,4,5]\ns=0\ni=1\nwhile(i in list1):\n    s=s+i\n    i=i+1\nprint(s,end=' ')" : "15 ",
"i=0\nwhile (i<10):\n    if(i%2): i=i+3\n    i=i+1\nprint(i)" : "11",
"for i in range(1,6,2):\n    if (i==4):\n        break\n    print(i,end=' ')" : "1 3 ",
"dic={'a':4,'t':9,'e':7}\nprint(dic[0])" : "KeyError",
"dic={1:1,2:2,3:4,4:5}\ndic.popitem(4)" : "TypeError",
"dic={1:'a',2:'e',3:'i',4:'o',5:'u'}\nprint(type(dic.keys()))" : "<class 'dict_keys'>",
"dic={1.2:2,0.4:4,6.5:5}\nfor i in dic:\n    print(i,end=' ')" : "1.2 0.4 6.5 ",
"set1={3.5,'g',6,3}\nset2={'h',4,3,'y'}\nset1.symmetric_difference(set2)" : "{3.5, 4, 'g', 6, 'h', 'y'}",
"print(bool(' ') + 4)" : "5",
"list1=[5,'t',5.6,3,'Python']\nprint(3.0 in list1,end=' ')\nprint(bool(list1[-2:-4]))" : "False False",
"print(not(True and False or True),end=' ')\nprint(not True and False or True)" : "False True",
"tup=(1,'t',8.5,6,'y',True)\nprint(tup[:-2])" : "(1, 't', 8.5, 6)",
"tup=('a',)\nprint(tup*3)" : "('a', 'a', 'a')",
"str1=str(1234)\nstr2='1234'\nprint(str1==str2,end=' ')\nprint(str1 is str2)" : "True False",
"rng=range(-3,3)\nprint(rng[3])" : "0",
"if('false'):\n    print('false')\nelif('true'):\n    print('true')\nelse:\n    print('None')" : "false",
"a = {1, 2, 3}\nb = a.copy()\nb.add(4)\nprint(a)" : "{1, 2, 3}",
"def f1():\n    x = 15\n    print(x)\nx = 12\nf1()" : "15",
"def f1():\n    total += 1\n    return total\ntotal = 0\nprint(f1())" : "UnboundLocalError",
"a = (1, 2, 3)\nb = (3, 4, 5)\nc = a+b\nprint(c)" : "(1, 2, 3, 3, 4, 5)",
"def a(b, c, d):\n    pass" : "",
"my_list = [1.0, 1, 1]\nmy_list.remove(1)\nprint(my_list)" : "[1.0, 1]",
"x = 29\ndef p(a, b = x):\n    print(a, b)\nx = 35\np(25)" : "25 29",
"x = 39\ndef p(a, b = x):\n    print(a, b)\nx = 45\np(35)" : "35 39",
"x = 49\ndef p(a, b = x):\n    print(a, b)\nx = 55\np(45)" : "45 49",
"a = [9, 9.2, 9.3]\nb = sorted(a)\nb.insert(1, 9)\nprint(a[1])" : "9.2",
"a = [9, 9.2, 9.3]\nb = sorted(a)\nb.insert(1, 9)\nprint(a[2])" : "9.3",
"a = [9, 9.2, 9.3]\nb = sorted(a)\nb.insert(1, 9)\nprint(a[3])" : "IndexError",
"a = 9\ndef add():\n    a = 10\n    a = a + 10\n    print(a)\nadd()\nprint(a)" : "20\n9",
"for x in range(0.5, 5.5, 0.5):\n    print(x)" : "TypeError",
"Quyidagi dastur natijasini aniqlang.\nlist1 = [1, 2, 3, 4]\nlist2 = [5, 6, 7, 8]\nprint(len(list1+list2))" : "8",
"Quyidagi dastur natijasini aniqlang.\ni = 8\nwhile True:\n    if i%9 == 0:\n        break\n    print(i, end=\" \")\n    i+=2" : "8 10 12 14 16",
"Quyidagi dastur natijasini aniqlang.\nlst = [4, 6, 2.0, 6]\nlst.pop(lst.index(lst.count(6)))\nprint(lst)" : "[4, 6, 6]",
"Quyidagi dastur natijasini aniqlang.\ni = 0\nwhile i<3:\n    print(i)\n    i++\n    print(i+1)" : "xatolik",
"Quyidagi dastur natijasini aniqlang.\ni = 0\nwhile i<4:\n    print(i, end=\" \")\n    i++\n    print(i+1, end=\" \")" : "xatolik",
"Quyidagi dastur natijasini aniqlang.\ni = 0\nwhile i<2:\n    print(i, end=\" \")\n    i++\n    print(i+1, end=\" \")" : "xatolik",
"Quyidagi dastur natijasini aniqlang.\ni = 0\nwhile i<2:\n    print(i, end=\" \")\n    i+=1\n    print(i+1, end=\" \")" : "0 2 1 3",
"Quyidagi dastur natijasini aniqlang.\ni = 0\nwhile i<5:\n    print(i, end=\" \")\n    i+=1\n    print(i+1, end=\" \")" : "0 2 1 3 2 4 3 5 4 6",
"Quyidagi dastur natijasini aniqlang.\ni = 0\nwhile i<3:\n    print(i, end=\" \")\n    i+=1\n    print(i+1, end=\" \")" : "0 2 1 3 2 4",
"Quyidagi dastur natijasini aniqlang.\na = [1,2,3,None,(),[],]\nprint(len(a))" : "6",
"Quyidagi dastur natijasini aniqlang.\na = [1,2,3,None,(),[1],]\nprint(len(a))" : "6",
"Quyidagi dastur natijasini aniqlang.\na = [1,2,3,None,(1,2,3),[1],]\nprint(len(a))" : "6",
"Quyidagi dastur natijasini aniqlang.\na = [1,2,3,None,(1),[],]\nprint(len(a))" : "6",
"Quyidagi dastur natijasini aniqlang.\na = [1, 3, 2]\ndel a[0]\ndel a[0]\nprint(a[0])" : "2",
"Quyidagi dastur natijasini aniqlang.\na = [1, 3, 2]\ndel a[0]\ndel a[0]\nprint(a[1])" : "xatolik",
"Quyidagi dastur natijasini aniqlang.\nmy_list = [2.0, 2]\nm = max(my_list)\nprint(m==2)" : "True",
"Quyidagi dastur natijasini aniqlang.\nmy_list = [2, 2]\nm = max(my_list)\nprint(m==2)" : "True",
"Quyidagi dastur natijasini aniqlang.\ndef print(x, y):\n    return x + y\nprint(21, 21)\nprint('Python', 'Code')" : "hech nima chiqmaydi",
"Quyidagi dastur natijasini aniqlang.\nb = 'Pyt'\na = b[::-1]\ndef func(a,b):\n    print(b+a)\n    return a + b\nfunc(b,a)" : "tyPPyt",
"Quyidagi dastur natijasini aniqlang.\nseq1 = ['one', 'two', 'three']\nseq2 = ['four', 'five', 'six']\nseq3 = seq1.append(seq2)\nprint(seq3)" : "None",
"Quyidagi dastur natijasini aniqlang.\na = [1, 2, 3, \"4\"]\nb = a.copy()\na.append(7)\nprint(b)" : "[1, 2, 3, '4']",
"Quyidagi dastur natijasini aniqlang.\na = (500.0)\nprint(type(a))" : "<class 'float'>",
"Quyidagi dastur natijasini aniqlang.\na = (500.0, )\nprint(type(a))" : "<class 'tuple'>",
"Quyidagi dastur natijasini aniqlang.\na = (500)\nprint(type(a))" : "<class 'int'>",
"Quyidagi dastur natijasini aniqlang.\na = (500,)\nprint(type(a))" : "<class 'tuple'>",
"Quyidagi dastur natijasini aniqlang.\nA = {30, 20, 10}\nB = {50, 30, 40}\nprint(A.symmetric_difference(B))" : "{40, 10, 50, 20}",
  "Tkinterda asosiy oynani yaratish uchun qaysi sinf ishlatiladi?": "Tk",
  "Tkinter dasturini ishga tushirish uchun qaysi metod chaqiriladi?": "root.mainloop()",
  "Label widgetini yaratish uchun qaysi sinf ishlatiladi?": "Label",
  "Button widgetiga matn qo'shish uchun qaysi parametr ishlatiladi?": "text",
  "Widgetlarni oynada joylashtirish uchun qaysi usullardan biri ishlatiladi?": "pack(), grid(), yoki place()",
  "Grid joylashtirish usulida qatorni belgilash uchun qaysi parametr ishlatiladi?": "row",
  "Entry widgeti qanday maqsadda ishlatiladi?": "Foydalanuvchidan matn (string) kiritishni olish uchun ishlatiladi.",
  "Checkbutton widgetining asosiy maqsadi nima?": "Belgilar on/off tugmasini yaratish.",
  "Radiobutton qanday holatda ishlatiladi?": "Bir nechta variantdan faqat bittasini tanlash uchun",
  "Canvas widgeti nima uchun ishlatiladi?": "Grafik elementlar yaratish uchun",
  "Tkinterda hodisalarni boshqarish uchun qaysi atribut ishlatiladi?": "bind()",
  "Frame widgeti qanday maqsadda ishlatiladi?": "Boshqa vidjetlarni guruhlash va tartibga solish uchun konteyner sifatida ishlatiladi.",
  "Menubarni yaratish uchun qaysi sinf ishlatiladi?": "Menu",
  "Text widgeti qanday maqsadda ishlatiladi?": "Ko‘p qatorli matn kiritish, tahrirlash yoki ko‘rsatish uchun ishlatiladi.",
  "Listbox widgeti qanday maqsadda ishlatiladi?": "Foydalanuvchiga bir nechta elementdan tanlash imkonini beradi.",
  "Scale widgeti nima uchun ishlatiladi?": "Slayder orqali raqamli qiymatni tanlash uchun ishlatiladi.",
  "Spinbox widgeti qanday maqsadda ishlatiladi?": "Belgilangan qiymatlar oralig‘ida raqam tanlash imkonini beradi.",
  "Tkinterda oynaning sarlavhasini o'zgartirish uchun qaysi metod ishlatiladi?": "title()",
  "Widgetning fon rangini o'zgartirish uchun qaysi parametr ishlatiladi?": "bg yoki background",
  "Widgetning matn rangini o'zgartirish uchun qaysi parametr ishlatiladi?": "fg yoki foreground",
  "pack() usulida widgetni vertikal joylashtirish uchun qaysi parametr ishlatiladi?": "side parametri (top, bottom, left, right)",
  "Grid usulida ustunning kengligini belgilash uchun qaysi metod ishlatiladi?": "columnconfigure()",
  "Widgetni oynaning markaziga joylashtirish uchun qaysi usul ishlatiladi?": "pack() yoki place()",
  "MessageBox ko'rsatish uchun qaysi modul ishlatiladi?": "tkinter.messagebox",
  "Foydalanuvchidan fayl tanlash uchun qaysi modul ishlatiladi?": "tkinter.filedialog",
  "Oynaning o'lchamini belgilash uchun qaysi metod ishlatiladi?": "geometry()",
  "Widgetni faqat o'qish rejimiga o'tkazish uchun qaysi parametr ishlatiladi?": "state='disabled'",
  "Entry widgetidagi matnni olish uchun qaysi metod ishlatiladi?": "get()",
  "Listboxdagi tanlangan elementni olish uchun qaysi metod ishlatiladi?": "curselection()",
  "Canvasda aylana chizish uchun qaysi metod ishlatiladi?": "create_oval()",
  "Widgetning shriftini o'zgartirish uchun qaysi parametr ishlatiladi?": "font",
  "Oynani yopishni oldini olish uchun qaysi metod ishlatiladi?": "protocol('WM_DELETE_WINDOW', callback_function)",
  "Checkbuttonning holatini olish uchun qaysi metod ishlatiladi?": "get()",
  "Radiobuttonning qiymatini saqlash uchun qaysi turdagi o'zgaruvchi ishlatiladi?": "IntVar() yoki StringVar()",
  "Text widgetiga matn qo'shish uchun qaysi metod ishlatiladi?": "insert()",
  "Oynaning minimal o'lchamini belgilash uchun qaysi metod ishlatiladi?": "minsize()",
  "Oynaning maksimal o'lchamini belgilash uchun qaysi metod ishlatiladi?": "maxsize()",
  "Canvasda chiziq chizish uchun qaysi metod ishlatiladi?": "create_line()",
  "Widgetni ko'rinmas qilish uchun qaysi metod ishlatiladi?": "pack_forget(), grid_forget(), yoki place_forget()",
  "Tugma bosilganda hodisani boshqarish uchun qaysi parametr ishlatiladi?": "command",
  "Oynani markazlashtirish uchun qaysi atribut ishlatiladi?" : "geometry() metodi bilan ekranning o‘lchami va oynaning o‘lchami hisoblanib, joylashuv koordinatalari belgilanadi",
"Listboxda bir nechta element tanlashga ruxsat berish uchun qaysi parametr ishlatiladi?" : "selectmode parametri (MULTIPLE yoki EXTENDED)",
"Scale widgetining diapazonini belgilash uchun qaysi parametr ishlatiladi?" : "from_ va to parametrlari",
"Menuda pastki menyu yaratish uchun qaysi metod ishlatiladi?" : "add_cascade()",
"Widgetning paddingini sozlash uchun qaysi parametr ishlatiladi?" : "padx va pady parametrlari",
"Oynani faqat o'qish rejimiga o'tkazish uchun qaysi metod ishlatiladi?" : "config(state= \"disabled\") yoki configure(state= \"disabled \") metodi",
"Canvasda tasvir ko'rsatish uchun qaysi metod ishlatiladi?" : "create_image()",
"Tkinterda standart shriftni o'zgartirish uchun qaysi modul ishlatiladi?" : "tkinter.font",
"Oynani yopish tugmasini boshqarish uchun qaysi protokol ishlatiladi?" : " \"WM_DELETE_WINDOW\" ",
"Turtle kutubxonasida grafik oynasini yaratish uchun qaysi funksiya ishlatiladi?" : "Screen()",
"Turtle obyektini yaratish uchun qaysi sinf ishlatiladi?" : "Turtle",
"Turtleni oldinga harakatlantirish uchun qaysi metod ishlatiladi?" : "forward(distance) yoki fd(distance)",
"Turtleni orqaga harakatlantirish uchun qaysi metod ishlatiladi?" : "backward(distance) yoki bk(distance)",
"Turtleni o'ngga burish uchun qaysi metod ishlatiladi?" : "right(angle)",
"Turtleni chapga burish uchun qaysi metod ishlatiladi?" : "left(angle)",
"Chizilgan chiziqning qalinligini o'zgartirish uchun qaysi metod ishlatiladi?" : "pensize() yoki width()",
"Turtlening chiziq rangini o'zgartirish uchun qaysi metod ishlatiladi?" : "pencolor()",
"Turtlening to'ldirish rangini o'zgartirish uchun qaysi metod ishlatiladi?" : "fillcolor()",
"To'ldirishni boshlash uchun qaysi metod ishlatiladi?" : "begin_fill()",
"To'ldirishni yakunlash uchun qaysi metod ishlatiladi?" : "end_fill()",
"Turtleni ma'lum bir koordinataga o'tkazish uchun qaysi metod ishlatiladi?" : "goto(x, y)",
"Turtlening hozirgi pozitsiyasini olish uchun qaysi metod ishlatiladi?" : "position() yoki pos()",
"Turtleni ko'rinmas qilish uchun qaysi metod ishlatiladi?" : "hideturtle()",
"Turtleni ko'rinadigan qilish uchun qaysi metod ishlatiladi?" : "showturtle()",
"Chizishni to'xtatish uchun qaysi metod ishlatiladi?" : "penup()",
"Chizishni boshlash uchun qaysi metod ishlatiladi?" : "pendown()",
"Turtle shaklini o'zgartirish uchun qaysi metod ishlatiladi?" : "shape()",
"Ekran fon rangini o'zgartirish uchun qaysi metod ishlatiladi?" : "bgcolor()",
"Turtlening tezligini o'zgartirish uchun qaysi metod ishlatiladi?" : "speed()",
"Aylana chizish uchun qaysi metod ishlatiladi?" : "circle(radius)",
"Turtlening burchagini o'rnatish uchun qaysi metod ishlatiladi?" : "setheading(angle)",
"Ekran o'lchamini o'zgartirish uchun qaysi metod ishlatiladi?" : "screensize(width, height)",
"Turtlening yo'nalishini aniqlash uchun qaysi metod ishlatiladi?" : "heading()",
"Ekran oynasini yopish uchun qaysi metod ishlatiladi?" : "bye()",
"Turtlening chizish jarayonini tozalash uchun qaysi metod ishlatiladi?" : "clear()",
"Barcha sozlamalarni asliga qaytarish uchun qaysi metod ishlatiladi?" : "reset()",
"Matn yozish uchun qaysi metod ishlatiladi?" : "write()",
"Turtle hodisalarini boshqarish uchun qaysi metod ishlatiladi?" : "onclick(), onkey(), onscreenclick() va listen()",
"Maus bosilish hodisasini boshqarish uchun qaysi metod ishlatiladi?" : "onclick()",
"Turtlening koordinatalarini o'zgartirmasdan burchakni o'rnatish uchun qaysi metod ishlatiladi?" : "setheading(angle)",
"Turtlening chiziq uslubini o'zgartirish uchun qaysi metod ishlatiladi?" : "pen() metodi orqali pensize, pencolor, fillcolor, speed kabi parametrlari beriladi",
"Turtle ekranining kengligini olish uchun qaysi metod ishlatiladi?" : "window_width()",
"Turtle ekranining balandligini olish uchun qaysi metod ishlatiladi?" : "window_height()",
"Turtle chizish jarayonini kechiktirish uchun qaysi metod ishlatiladi?" : "delay()",
"Turtle harakatini animatsiyasiz qilish uchun qaysi metod ishlatiladi?" : "tracer(0)",
"Turtlening shakl o'lchamini o'zgartirish uchun qaysi metod ishlatiladi?" : "shapesize()",
"Turtle ekranini yangilash uchun qaysi metod ishlatiladi?" : "update()",
"Turtle oynasining sarlavhasini o'zgartirish uchun qaysi metod ishlatiladi?" : "title()",
"Turtlening yo'l uzunligini o'lchash uchun qaysi metod ishlatiladi?" : "distance()",
"Turtle ekranda sichqoncha bosilgan joyning koordinatalarini olish uchun qaysi metod ishlatiladi?" : "onscreenclick()",
"Turtle shaklini ro'yxatdan tanlash uchun qaysi shakllar mavjud?" : "  \"arrow \",  \"turtle \",  \"circle \", \"square\",  \"triangle\",  \"classic\" ",
"Turtle oynasini to'liq ekran qilish uchun qaysi metod ishlatiladi?" :  " screen._rootwindow.attributes('-fullscreen', True) " ,
"Turtle chizig'ining shaffofligini o'zgartirish uchun qaysi metod ishlatiladi?" : "Bu imkoniyat yo‘q",
"Turtle oynasida sichqoncha harakatini kuzatish uchun qaysi metod ishlatiladi?" : "ondrag()",
"Turtle oynasida klaviatura hodisalarini tinglash uchun qaysi metod ishlatiladi?" : "onkey() yoki listen()",
"Turtlening boshlang'ich pozitsiyasiga qaytishi uchun qaysi metod ishlatiladi?" : "home()",
"Turtle chizgan shaklni qayta chizish uchun qaysi metod ishlatiladi?" : "Turtle moduli to‘g‘ridan-to‘g‘ri bunday metodni bermaydi",
"Turtle ekranini o'chirish va Turtleni boshlang'ich holatga qaytarish uchun qaysi metod ishlatiladi?" : "reset()",
"Turtle oynasida animatsiya tezligini o'zgartirish uchun qaysi metod ishlatiladi?" : "speed()",
 "Quyidagi dastur natijasini aniqlang. for i in range(1, 6, 2): if (i == 4): break print(i, end = \" \")": "1 3",
   "Quyidagi dastur natijasini aniqlang. def f1(): total += 1 return total total = 0 print(f1())": "Xatolik",
   "Scale widgetining diapazonini belgilash uchun qaysi parametr ishlatiadi?": "from_ va to",
   "Quyidagi dastur natijasini aniqlang. my_list = (\"1\", \"2\", \"3\") print(my_list[1])": "2",
   "Ekran oynasini yopish uchun qaysi metod ishlatiadi?": "bye()",
   "Quyidagi dastur natijasini aniqlang. a=[1,2,3, None, (1,2,3), [1],] print(len(a))": "6",
   "Quyidagi dastur natijasini aniqlang. b='Pyt' a=b[::-1] def func(a,b): print(b+a) return a+b func(b,a)": "Pyt tyP",
   "Quyidagi dastur natijasini aniqlang. dic={1:1,2:2,3:4,4:5} dic.popitem(4)": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. dic={1:\"a\",2:\"e\",3:\"i\",4:\"o\",5:\"u\"} print(type(dic.keys()))": "class 'dict_keys'",
    "Quyidagi dastur natijasını aniqlang. dic={1.2:2,0.4:4,6.5:5} for i in dic: print(i, end=\" \")": "1.2 0.4 6.5",
    "Quyidagi dastur natijasını aniqlang. set1={3.5,\"g\",6,3} set2={\"h\",4,3,\"y\"} set1.symmetric_difference(set2)": "{3.5, 'g', 6, 'h', 4, 'y'}",
    "Quyidagi dastur natijasını aniqlang. print(bool(\" \")+4)": "5",
    "Quyidagi dastur natijasını aniqlang. list1=[5,\"t\",5.6,3,\"Python\"] print(3.0 in list1, end=\" \") print(bool(list1[-2:-4]))": "False False",
    "Quyidagi dastur natijasını aniqlang. print(not(True and False or True), end=\" \") print(not True and False or True)": "False True",
    "Quyidagi dastur natijasını aniqlang. tup=(1,\"t\",8.5,6,\"y\",True) print(tup[:-2])": "(1, 't', 8.5, 6)",
    "Quyidagi dastur natijasını aniqlang. tup=('a',) print(tup*3)": "('a', 'a', 'a')",
    "Quyidagi dastur natijasını aniqlang. str1=str(1234) str2=\"1234\" print(str1==str2, end=\" \") print(str1 is str2)": "True False",
    "Quyidagi dastur natijasını aniqlang. rng=range(-3,3) print(rng[3])": "0",
    "Quyidagi dastur natijasını aniqlang. if(\"false\"): print(\"false\") elif(\"true\"): print(\"true\") else: print(\"None\")": "false",
    "Quyidagi dastur natijasını aniqlang. a={1,2,3} b=a.copy() b.add(4) print(a)": "{1, 2, 3}",
    "Quyidagi dastur natijasını aniqlang. def f1(): x=15 print(x) x=12 f1()": "15",
    "Quyidagi dastur natijasını aniqlang. def f1(): total+=1 return total total=0 print(f1())": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. a=(1,2,3) b=(3,4,5) c=a+b print(c)": "(1, 2, 3, 3, 4, 5)",
    "Quyidagi dastur natijasını aniqlang. def a(b,c,d): pass": "Hech narsa",
    "Quyidagi dastur natijasını aniqlang. my_list=[1.0,1,1] my_list.remove(1) print(my_list)": "[1.0, 1]",
    "Quyidagi dastur natijasını aniqlang. x=29 def p(a,b=x): print(a,b) x=35 p(25)": "25 29",
    "Quyidagi dastur natijasını aniqlang. x=39 def p(a,b=x): print(a,b) x=45 p(35)": "35 39",
    "Quyidagi dastur natijasını aniqlang. x=49 def p(a,b=x): print(a,b) x=55 p(45)": "45 49",
    "Quyidagi dastur natijasını aniqlang. a=[9,9.2,9.3] b=sorted(a) b.insert(1,9) print(a[1])": "9.2",
    "Quyidagi dastur natijasını aniqlang. a=[9,9.2,9.3] b=sorted(a) b.insert(1,9) print(a[2])": "9.3",
    "Quyidagi dastur natijasını aniqlang. a=[9,9.2,9.3] b=sorted(a) b.insert(1,9) print(a[3])": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. a=9 def add(): a=10 a=a+10 print(a) add() print(a)": "20 9",
    "Quyidagi dastur natijasını aniqlang. for x in range(0.5,5.5,0.5): print(x)": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. list1=[1,2,3,4] list2=[5,6,7,8] print(len(list1+list2))": "8",
    "Quyidagi dastur natijasını aniqlang. i=8 while True: if i%9==0: break print(i, end=\" \") i+=2": "8 10 12 14 16",
    "Quyidagi dastur natijasını aniqlang. lst=[4,6,2.0,6] lst.pop(lst.index(lst.count(6))) print(lst)": "[4, 6, 6]",
    "Quyidagi dastur natijasını aniqlang. i=0 while i<3: print(i) i++ print(i+1)": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. i=0 while i<4: print(i, end=\" \") i++ print(i+1, end=\" \")": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. i=0 while i<2: print(i, end=\" \") i++ print(i+1, end=\" \")": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. i=0 while i<2: print(i, end=\" \") i+=1 print(i+1, end=\" \")": "0 1 1 2",
    "Quyidagi dastur natijasını aniqlang. i=0 while i<5: print(i, end=\" \") i+=1 print(i+1, end=\" \")": "0 1 2 3 4 1 2 3 4 5",
    "Quyidagi dastur natijasını aniqlang. i=0 while i<3: print(i, end=\" \") i+=1 print(i+1, end=\" \")": "0 1 2 1 2 3",
    "Quyidagi dastur natijasını aniqlang. a=[1,2,3,None,(),[]] print(len(a))": "6",
    "Quyidagi dastur natijasını aniqlang. a=[1,3,2] del a[0] del a[0] print(a[0])": "2",
    "Quyidagi dastur natijasını aniqlang. a=[1,3,2] del a[0] del a[0] print(a[1])": "Xatolik",
    "Quyidagi dastur natijasını aniqlang. my_list=[2.0,2] m=max(my_list) print(m==2)": "True",
    "Quyidagi dastur natijasını aniqlang. my_list=[2,2] m=max(my_list) print(m==2)": "True",
    "Quyidagi dastur natijasını aniqlang. def print(x,y): return x+y print(21,21) print('Python','Code')": "42 PythonCode",
    "Quyidagi dastur natijasını aniqlang. b='Pyt' a=b[::-1] def func(a,b): print(b+a) return a+b func(b,a)": "tyPPyt tyP",
    "Quyidagi dastur natijasını aniqlang. seq1=['one','two','three'] seq2=['four','five','six'] seq3=seq1.append(seq2) print(seq3)": "None",
    "Quyidagi dastur natijasını aniqlang. a=[1,2,3,\"4\"] b=a.copy() a.append(7) print(b)": "[1, 2, 3, '4']",
    "Quyidagi dastur natijasını aniqlang. a=(500.0) print(type(a))": "class 'float'",
    "Quyidagi dastur natijasını aniqlang. a=(500,) print(type(a))": "class 'tuple'",
    "Quyidagi dastur natijasını aniqlang. A={30,20,10} B={50,30,40} print(A.symmetric_difference(B))": "{10, 20, 40, 50}",
     "Turtle chizgan shaklni qayta chizish uchun qaysi metod ishlailadi?": "stamp()",
    "Turtle oynasining sarlavhasini o'zgartirish uchun qaysi metod ishlailadi?": "title()",
    "Quyidagi dastur natijasini aniqlang. a={1,2,3} b=a.copy() b.add(4) print(a)": "{1,2,3}",
    "Foydalanuvchidan fayl tanlash uchun qaysi modul ishlailadi?": "tkinter.filedialog",
    "Grid joylashtirish usulida qatorni belgilash uchun qaysi parametr ishlailadi?": "row",
     "Chizishni to'xtatish uchun qaysi metod ishlailadi?": "penup()",
    "Turtle hodisalarini boshqarish uchun qaysi metod ishlailadi?": "onkey()",
    "Turtleni oldinga harakatlantirish uchun qaysi metod ishlailadi?": "forward()",
    "Quyidagi dastur natijasini aniqlang. rng=range(-3,3) print(rng[3])": "0",
     "Turtleni ko'rinmas qilish uchun qaysi metod ishlailadi?": "hideturtle()",
    "Quyidagilardan qaysi biri to'plamlar (sets) qiymatlarini o'chirish uchun ishlailmaydi?": "del",
    "Quyidagi dastur natijasini aniqlang. a=[9,9.2,9.3] b=sorted(a) b.insert(1,9) print(a[2])": "9.3",
     "Quyidagi dastur natijasini aniqlang. tup=('a',) print(tup*3)": "('a', 'a', 'a')",
    "Quyidagi dastur natijasini aniqlang. def print(x,y): return x+y print(21,21) print('Python','Code')": "Hech narsa ekranga chiqmaydi",
    "Quyidagi dastur natijasini aniqlang. a=(500.0) print(type(a))": "class 'float'",
    "Quyidagi dastur natijasini aniqlang. x = (\"650-21\", \"651-21\", \"652-21\") y[1] = \"653-21\" print(x)": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. thisdict = { \"1\": 123, \"2\": 1, \"3\": 3} print(sum(thisdict.keys()))": "Xatolik ",
    "Quyidagi dasturning natijasini aniqlang. x = { \"Windows\", \"Linux\", \"Android\"} y = { \"Google\", \"Microsoft\", \"Windows\"} x.symmetric_difference_update(y)": "{'Google', 'Linux', 'Android', 'Microsoft'}",
    "Frame widgeti qanday maqsadda ishlatiadi?": "Widgetlarni guruhlash uchun",
     "Turtlening chizish jarayonini tozalash uchun qaysi metod ishlailadi?": "clear()",
    "Entry widgetidagi matnni olish uchun qaysi metod ishlailadi?": "get()",
    "Quyidagi dastur natijasini aniqlang. a=[1,3,2] del a[0] del a[0] print(a[1])": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. my_list=[2.0,2] m = max(my_list) print(m==2)": "True",
    "Quyidagi dastur natijasini aniqlang. i=8 while True: if i%9==0: break print(i, end=\" \") i+=2": "8 10 12 14 16",
    "Quyidagi dastur natijasini aniqlang. a=[9,9.2,9.3] b=sorted(a) b.insert(1,9) print(a[3])": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. print(int(4.9))": "4",
    "Quyidagi dastur natijasini aniqlang. str1 = str(1234) str2 = \"1234\" print(str1 == str2, end = \" \") print(str1 is str2)": "True False",
    "Chizishni boshlash uchun qaysi metod ishlailadi?": "pendown()",
    "Turtleni chapga burish uchun qaysi metod ishlailadi?": "left()",
    "Widgetning shriftini o'zgartirish uchun qaysi parametr ishlailadi?": "font",
    "Quyidagi dastur natijasini aniqlang. c = 0 for i in \"abc xyz\": c = c + 1 print(c)": "7",
    "Scale widgeti nima uchun ishlailadi?": "Slayder orqali qiymat tanlash",
    "Quyidagi dastur natijasini aniqlang. a=(1,2,3) b=(3,4,5) c=a+b print(c)": "(1,2,3,3,4,5)",
    "Canvas widgeti nima uchun ishlailadi?": "Grafik elementlar chizish uchun",
    "Text widgeti qanday maqsadda ishlailadi?": "ko'p qatorli matn kiritish va tahrirlash uchun",
    "Ekran fon rangini o'zgartirish uchun qaysi metod ishlailadi?": "bgcolor()",
    "Quyidagi dastur natijasini aniqlang. dict1 = {\"key1\":1, \"key2\":2} dict2 = {\"key2\":2, \"key1\":1} if dict1 == dict2: print(\"True\")": "True",
    "Quyidagi dastur natijasini aniqlang. set1={4,'v',6.9,4.0,'e'} print(set1)": "{'v', 4, 6.9, 'e'}",
    "Quyidagi kodning natijasi qanday bo'ladi? my_list = (1,2,3) my_list.append(4)": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. dic = {1:\"a\", 2:\"e\", 3:\"i\", 4:\"o\", 5:\"u\"} print(type(dic.keys()))": "class 'dict_keys'",
    "Quyidagi dastur natijasini aniqlang. b = 'Pyt' a = b[.:-1] def func(a, b): print(b+a) return a + b func(b, a)": "Pyt tyP",
    "Quyidagi dastur natijasini aniqlang. mg = range(-3,3) print(mg[3])": "Xatolik",
    "Widgetning o'Ichamini o'zgartirish uchun qaysi parametr ishlatiladi?": "width",
    "Pythonda bo'sh ro'yxatni qanday e'lon qilish mumkin?": "empty_list = []",
    "Quyidagi dastur natijasini aniqlang. x = {\"Windows\", \"Linux\", \"Android\"} y = {\"Google\", \"Microsoft\", \"Windows\"} x.intersection_update(y)": "{'Windows'}",
    "Quyidagi dastur natijasini aniqlang. dic = {1: 1, 2: 2, 3: 4, 4: 5} dic.popitem(4)": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. list1 = [1, 2, 3, 4, 5] s = 0 i=1 while(i in list1): s=s+i i=i+1 print(s,end=\" \")": "1 3 6 10 15",
    "Frame widgeti qanday maqsadda ishlailadi?": "Widgetlarni guruhlash uchun",
    "Quyidagi dastur natijasini aniqlang. a=(500), print(type(a))": "class 'tuple'",
    "Widgetning paddingini sozlash uchun qaysi parametr ishlailadi?": "padx va pady",
    "Turtle chizig'ining shaffofligini o'zgartirish uchun qaysi metod ishlailadi?": "pencolor() bilan alpha qiymati",
    "Spinbox widgeti qanday maqsadda ishlailadi?": "Sonli yoki ro'yxatdan qiymat tanlash",
    "Quyidagi dastur natijasini aniqlang. rng = range(-3, 3) print(rng[3])": "0",
    "Quyidagi dasturning natijasini aniqlang. x = { \"Windows\", \"Linux\", \"Android\" } y = { \"Google\", \"Microsoft\", \"Windows\" } x.symmetric_difference_update(y)": "['Google', 'Linux', 'Android', 'Microsoft']",
    "Quyidagi dastur natijasini aniqlang. a=[1,3,2] del a[0] del a[0] print(a[0])": "2",
    "Scale widgeti nima uchun ishlatiadi?": "Slayder orqali qiymat tanlash",
    "Turtlening chiziq uslubini o'zgartirish uchun qaysi metod ishlatiadi?": "pen()",
    "Quyidagi dastur natijasini aniqlang. a=[1,2,3, None, (), [1], ] print(len(a))": "6",
    "Turtlening hozirgi pozitsiyasini olish uchun qaysi metod ishlatiadi?": "pos()",
    "Widgetning o'lchamini o'zgartirish uchun qaysi parametr ishlatiadi?": "width",
    "Turtle shaklini o'zgartirish uchun qaysi metod ishlailadi?": "shape()",
    "Quyidagi dastur natijasini aniqlang. a = 9 def add(): a = 10 a = a + 10 print(a) add() print(a)": "20 9",
    "Chizilgan chiziqning qalinligini o'zgartirish uchun qaysi metod ishlailadi?": "pensize()",
    "Quyidagi dastur natijasini aniqlang. thisdict = {\"1\": 123, \"2\": 1, \"3\": 3} print(sum(thisdict.values()))": "127",
    "Quyidagi dastur natijasini aniqlang. my_list = [1.0, 1, 1] my_list.remove(1) print(my_list)": "[1, 1]",
    "Pythonda yangi lug'at yaratish quyidagilardan qaysi birida to'g'ri bajarilgan?": "dictionary = {}",
    "Quyidagi dastur natijasini aniqlang. lst = [4, 6, 2.0, 6] lst.pop(lst.index(lst.count(6))) print(lst)": "[4, 6, 6]",
    "pack() usulida widgetni vertikal joylashtirish uchun qaysi parametr ishlatiadi?": "side",
    "Checkbuttonning holatini olish uchun qaysi metod ishlatiadi?": "get()",
      "Quyidagi dastur natijasini aniqlang. count=0 while True: print(count, end=\" \") count+=1 if count>=5: break": "0 1 2 3 4",
    "Radiobuttonning qiymatini saqlash uchun qaysi turdagi o'zgaruvchi ishlailadi?": "IntVar",
    "Quyidagi dastur natijasini aniqlang. def a(b, c, d): pass": "Hech qanday vazifani bajarmaydigan funksiya",
    "Turtleni ma'lum bir koordinataga o'tkazish uchun qaysi metod ishlailadi?": "goto()",
    "Quyidagi dastur natijasini aniqlang. seq1 = ['one', 'two', 'three'] seq2 = ['four', 'five', 'six'] seq3 = seq1.append(seq2) print(seq3)": "None",
    "Quyidagi dastur natijasini aniqlang. dic = {1: \"a\", 2: \"e\", 3: \"i\", 4: \"o\", 5: \"u\"} print(type(dic.keys()))": "class 'dict_keys'",
    "Quyidagi dastur natijasini aniqlang. n = 5 while(n): n = n - 1 print(n, end = \" \")": "4 3 2 1 0",
    "Turtle obyektini yaratish uchun qaysi sinf ishlailadi?": "Turtle",
    "Quyidagi dastur natijasini aniqlang. print(not(True and False or True), end=\" \") print(not True and False or True)": "False True",
    "Menubarni yaratish uchun qaysi sinf ishlailadi?": "Menu",
    "Quyidagi dastur natijasini aniqlang. a = [1,2,3] while a: print(a.pop(), end=\" \") else: print('Salom')": "3 2 1 Salam",
    "Widgetning matn rangini o'zgartirish uchun qaysi parametr ishlati ladi?": "fg",
    "Quyidagi dastur natijasini aniqlang. set1 = {4, 'v', 6.9, 4.0, 'e'} print(set1)": "['v', 4, 6.9, 'e']",
    "Turtleni o'ngga burish uchun qaysi metod ishlati ladi?": "right()",
    "Turtle hodisalarini boshqarish uchun qaysi metod ishlati ladi?": "onkey()",
    "Turtleni orqaga harakatlantirish uchun qaysi metod ishlati ladi?": "backward()",
    "Listboxda bir nechta element tanlashga ruxsat berish uchun qaysi parametr ishlati ladi?": "selectmode='multiple'",
    "Quyidagi dastur natijasini aniqlang. a = [1, 2, 3, None, (), [], ] print(len(a))": "6",
    "Quyidagi dastur natijasini aniqlang. for i in range(5): if i%2==0: continue print(i, end=\" \")": "1 3",
    "Maus bosilish hodisasini boshqarish uchun qaysi metod ishlati ladi?": "onclick()",
    "Quyidagi dastur natijasini aniqlang. def f1(): x=15 print(x) x=12 f1()": "15",
    "Quyidagi dastur natijasini aniqlang. str1 = str(1234) str2 = \"1234\" print(str1==str2, end=\" \") print(str1 is str2)": "True False",
    "Quyidagi dastur natijasini aniqlang. x=49 def p(a, b=x): print(a, b) x=55 p(45)": "45 49",
    "Quyidagi dastur natijasini aniqlang. a=[1,2,3,None,(),[]] print(len(a))": "6",
    "Quyidagi dastur natijasini aniqlang. thisdict={\"1\":123,\"2\":1,\"3\":3} print(sum(thisdict.values()))": "127",
    "Quyidagi dastur natijasini aniqlang. a=(500,) print(type(a))": "class 'tuple'",
    "Ro'yxat oxiriga element qo'shishning to'g'ri yo'li qanday?": "my_list.append(item)",
      "Turtleni o'ngga burish uchun qaysi metod ishlatiadi?": "right()",
    "Quyidagi dastur natijasini aniqlang. a=[9,9.2,9.3] b=sorted(a) b.insert(1,9) print(a[1])": "9.2",
    "Ekran o'lchamini o'zgartirish uchun qaysi metod ishlailadi?": "screensize()",
    "Turtle ekranining balandligini olish uchun qaysi metod ishlailadi?": "window_height()",
    "pack() usulida widgetni vertikal joylashtirish uchun qaysi parametr ishlailadi?": "side",
    "Quyidagi dastur natijasini aniqlang. a=9 def add(): a=10 a=a+10 print(a) add() print(a)": "20 9",
    "Quyidagi dastur natijasini aniqlang. x=(\"650-21\",\"651-21\",\"652-21\") y[1]=\"653-21\" print(x)": "Xatolik",
    "Widgetlarni oynada joylashtirish uchun qaysi usullardan biri ishlatiadi?": "pack()",
    "Quyidagi dastur natijasini aniqlang. seq1=['one','two','three'] seq2=['four','five','six'] seq3=seq1.append(seq2) print(seq3)": "None",
    "Chizilgan chiziqning qalinligini o'zgartirish uchun qaysi metod ishlatiadi?": "pensize()",
    "Turtlening chizish jarayonini tozalash uchun qaysi metod ishlatiadi?": "clear()",
    "Ekran fon rangini o'zgartirish uchun qaysi metod ishlatiadi?": "bgcolor()",
    "Turtle harakatini animatsiyasiz qilish uchun qaysi metod ishlatiadi?": "tracer()",
    "Quyidagi dastur natijasini aniqlang. a=(500) print(type(a))": "class 'int'",
    "Quyidagi dastur natijasini aniqlang. x=29 def p(a,b=x): print(a,b) x=35 p(25)": "25 29",
    "Turtlening chiziq rangini o'zgartirish uchun qaysi metod ishlailadi?": "pencolor()",
    "Quyidagi dastur natijasini aniqlang. for i in range(1,6,2): if (i==4): break print(i, end=\" \")": "1 3 5",
    "To'ldirishni boshlash uchun qaysi metod ishlailadi?": "begin_fill()",
    "Turtlening yo'l uzunligini o'lchash uchun qaysi metod ishlailadi?": "distance()",
    "Quyidagi dastur natijasini aniqlang. for x in range(0.5,5.5,0.5): print(x)": "Xatolik",
    "Turtle oynasini to'liq ekran qilish uchun qaysi metod ishlailadi?": "Screen().getcanvas().winfo_toplevel().attributes('-fullscreen', True)",
    "Entry widgeti qanday maqsadda ishlailadi?": "Foydalanuvchi matn kiritishi uchun",
    "Quyidagi dastur natijasini aniqlang. my_list=(\"1\",\"2\",\"3\") print(my_list[1])": "2",
    "Quyidagi dastur natijasini aniqlang. n=5 while(n): n=n-1 print(n, end=\" \")": "4 3 2 1 0",
    "Quyidagi dastur natijasini aniqlang. c=0 for i in \"abc xyz\": c=c+1 print(c)": "7",
    "Widgetning o'lchamini o'zgartirish uchun qaysi parametr ishlatiladi?": "width",
    "Quyidagi dastur natijasini aniqlang. my_list=[2,2] m=max(my_list) print(m==2)": "True",
    "Quyidagi dastur natijasini aniqlang. dic={1:\"a\",2:\"e\",3:\"i\",4:\"o\",5:\"u\"} print(type(dic.keys()))": "class 'dict_keys'",
    "Quyidagi dastur natijasini aniqlang. set1={\"a\",\"b\",2} set2={1,2,3} set3=set1.union(set2)": "{'b',1,'a',2,3}",
    "Turtle ekranini yangilash uchun qaysi metod ishlailadi?": "update()",
    "Turtle ekranini o'chirish va Turtleni boshlang'ich holatga qaytarish uchun qaysi metod ishlailadi?": "clearscreen()",
    "Turtle shaklini o'zgartirish uchun qaysi metod ishlatiadi?": "shape()",
    "Radiobuttonning qiymatini saqlash uchun qaysi turdagi o'zgaruvchi ishlatiadi?": "StringVar",
    "Ro'yxat yoki kortejda muayyan elementning indeksini qaysi funksiyadan foydalanib topish mumkin?": "index()",
    "Listbox widgeti qanday maqsadda ishlatiadi?": "Tanlanadigan elementlar ro'yxatini ko'rsatish",
    "Oynaning o'lchamini belgilash uchun qaysi metod ishlatiadi?": "geometry()",
    "Maus bosilish hodisasini boshqarish uchun qaysi metod ishlatiadi?": "onclick()",
    "Turtle chizish jarayonini kechiktirish uchun qaysi metod ishlatiadi?": "delay()",
    "Quyidagi dastur natijasini aniqlang. print(bool(\" \")+4)": "5",
    "Quyidagi dastur natijasini aniqlang. tup=(1,\"t\",8,5,6,\"y\",True) print(tup[:-2])": "(1,'t',8,5,6)",
    "Quyidagi dastur natijasini aniqlang. my_list=[2.0,2] m=max(my_list) print(m==2)": "True",
    "Turtlening yo'nalishini aniqlash uchun qaysi metod ishlatiadi?": "heading()",
    "Radiobutton qanday holatda ishlailadi?": "Bir nechta variantdan faqat bittasini tanlash uchun",
    "Quyidagi kodning natijasi qanday bo'ladi? my_list=(1,2,3) my_list.append(4)": "xatolik yuz beradi",
    "Quyidagi dastur natijasini aniqlang. x={\"Windows\",\"Linux\",\"Android\"} y={\"Google\",\"Microsoft\",\"Windows\"} x.intersection_update(y)": "{\"Windows\"}",
    "Tkinterda asosiy oynani yaratish uchun qaysi sinf ishlailadi?": "Tk",
    "Quyidagi dastur natijasini aniqlang. a=[1,2,3] while a: print(a.pop(), end=\" \") else: print('Salom')": "3 2 1 Salom",
    "Turtle chizish jarayonini kechiktirish uchun qaysi metod ishlailadi?": "delay()",
    "Turtle oynasida sichqoncha harakatini kuzatish uchun qaysi metod ishlailadi?": "ondrag()",
    "Tkinterda oynaning sarlavhasini o'zgartirish uchun qaysi metod ishlailadi?": "title()",
    "Quyidagi dastur natijasini aniqlang. str1=str(1234) str2=\"1234\" print(str1==str2, end=\" \") print(str1 is str2)": "True False",
    "Quyidagi dastur natijasini aniqlang. a=(500.0,) print(type(a))": "class 'tuple'",
    "Maus bosilish hodisasini boshqarish uchun qaysi metod ishlailadi?": "onclick()",
    "Listboxdagi tanlangan elementni olish uchun qaysi metod ishlatiadi?": "get(ACTIVE)",
    "Turtleni oldinga harakatlantirish uchun qaysi metod ishlatiadi?": "forward()",
    "Oynaning minimal o'lchamini belgilash uchun qaysi metod ishlatiadi?": "minsize()",
    "To'ldirishni yakunlash uchun qaysi metod ishlatiadi?": "end_fill()",
    "Quyidagi dastur natijasini aniqlang. thisset={\"Windows\",\"Linux\",\"Android\"} x=thisset.pop() print(x)": "Oldindan aniqlab bo'lmaydi",
    "Quyidagi dastur natijasini aniqlang. my_list=[1.0,1,1] my_list.remove(1) print(my_list)": "[1,1]",
    "Text widgetiga matn qo'shish uchun qaysi metod ishlatiadi?": "insert()",
    "Quyidagi dastur natijasini aniqlang. my_list={\"1\",\"2\",\"3\"} print(my_list[1])": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. x=39 def p(a,b=x): print(a,b) x=45 p(35)": "35 39",
    "Quyidagi dastur natijasini aniqlang. {1,2,3,4}=={1,4,3,2} {1,2,3,4}>{1,2,3,'4'}": "True False",
    "Quyidagi dastur natijasini aniqlang. grades=[1,2,3,4,5] for grade in grades[::]: if grade>4 in grades[1:4]: print(f\"Your grade: {grade}\") else: pass": "Your grade: 5",
    "Berilgan lug'atni kamayish tartibida saralash to'g'ri ko'rsatilgan javobni ko'rsating. dictionary={\"a\":1,\"b\":2,\"c\":3} print indictment (dictionary.items())": "sorted(dictionary.items(), key=lambda x: x[1], reverse=True)",
    "Quyidagi dastur natijasini aniqlang. dict1={\"key1\":1,\"key2\":2} dict2={\"key2\":2,\"key1\":1} if dict1==dict2: print(dict1.get('key1')) elif dict1!=dict2: print(dict1.get('key2')) else: print(type(dict1))": "1",
    "Quyidagi dastur natijasini aniqlang. x=49 def p(a,b=x): print(a,b) x=55 p(45)": "45 49",
    "Quyidagi dastur natijasini aniqlang. for x in range(2,10,3): print(x, end=\" \")": "2 5 8",
    "Quyidagi dastur natijasini aniqlang. def f1(): total+=1 return total total=0 print(f1())": "Xatolik",
    "Quyidagi dastur natijasini aniqlang. a=[1,2,3,None,(1),[]] print(len(a))": "6",
    "Ro'yxat yoki kortejdagi elementga indeks bo'yicha qanday murojaat qilish mumkin?": "my_list[index] yoki my_tuple[index]",
    "Quyidagi usullardan qaysi biri ro'yxatdagi oxirgi elementni olib tashlaydi va uni qaytaradi?": "pop()",
    "Quyidagi dastur natijasini aniqlang. print(my_tuple[-2])": "Ikkinchi oxirgi element",
    "Quyidagi dastur natijasini aniqlang. my_var=[1,2,3,4,5] print(my_var[1:3])": "[2, 3]",
    "Ikki yoki undan ortiq to'plamlar orasidagi farqni o'z ichiga olgan to'plamni qaytaradigan funksiyani ko'rsating.": "difference()",
    "Quyidagi dasturning natijasini aniqlang. x={\"Windows\",\"Linux\",\"Android\"} y={\"Google\",\"Microsoft\",\"Windows\"} x.symmetric_difference_update(y)": "{'Google', 'Linux', 'Android', 'Microsoft'}",
    "Quyidagi dastur natijasini aniqlang. thisdict={\"1\":123,\"2\":1,\"3\":3} print(sum(thisdict.keys()))": "Xatolik",
    "Pythonla yangi lug'at yaratish quyidagilardan qaysi birida to'g'ri bajarilgan?": "my_dict = {}",
    "Quyidagi dastur natijasini aniqlang. print(list(range(-3,9,3)))": "[-3, 0, 3, 6]",
    "Quyidagi dastur natijasini aniqlang. for i in range(5): if(i%2): print(i, end=\" \")": "1 3",
    "Quyidagi dastur natijasini aniqlang. list1=[1,2,3,4,5] s=0 i=1 while(i in list1): s=s+i i=i+1 print(s, end=\" \")": "1 3 6 10 15",
    "Quyidagi dastur natijasini aniqlang. i=0 while(i<10): if(i%2): i=i+3 i=i+1 print(i)": "1\n2\n4\n5\n7\n8\n10",
    "Quyidagi dastur natijasini aniqlang. for i in range(1,6,2): if(i==4): break print(i, end=\" \")": "1 3",
    "Quyidagi dastur natijasini aniqlang. dic={\"a\":4,\"t\":9,\"e\":7} print(dic[0])": "Xatolik",
    "Marcha sozlamalarni asliga qaytarish uchun qaysi metod ishlatiladi?": "reset()",

};
// So'zlar orasidagi o'xshashlikni hisoblash (Jaccard index)
function jaccardSimilarity(query, question) {
    const queryWords = query.toLowerCase().split(" ");
    const questionWords = question.toLowerCase().split(" ");
    const intersection = queryWords.filter((word) => questionWords.includes(word));
    const union = new Set([...queryWords, ...questionWords]);
    return intersection.length / union.size;
}

// Eng yaqin savolni qidirish
function findBestMatch(query) {
    let maxSimilarity = 0;
    let bestMatch = "";
    for (let question in questionsAndAnswers) {
        const similarity = jaccardSimilarity(query, question);
        if (similarity > maxSimilarity) {
            maxSimilarity = similarity;
            bestMatch = question;
        }
    }
    return bestMatch;
}

// Input oynasini yaratish
const inputContainer = document.createElement("div");
inputContainer.style.position = "fixed";
inputContainer.style.bottom = "20px";
inputContainer.style.left = "50%";
inputContainer.style.transform = "translateX(-50%)"; // Markazlashtirish
inputContainer.style.width = "calc(100% - 40px)";
inputContainer.style.maxWidth = "500px"; // Maksimal kenglik
inputContainer.style.display = "flex";
inputContainer.style.flexDirection = "column";
inputContainer.style.alignItems = "center";
inputContainer.style.zIndex = "1000";

// Input maydoni
const input = document.createElement("input");
input.type = "text";
input.placeholder = "..";
input.style.padding = "12px 20px";
input.style.width = "100%";
input.style.border = "2px solid #fafafa";
input.style.borderRadius = "30px";
input.style.backgroundColor = "transparent"; // Oq fon
input.style.opacity = "0.1"; // Alfa qiymati
input.style.fontSize = "16px";
input.style.outline = "none";

// Fokus bo'lganida uslub o'zgarishi
input.addEventListener("focus", () => {
    input.style.borderColor = "transparent"; // Fokusda chiroyli koerinish
});

// Fokusdan chiqqanda uslubni tiklash
input.addEventListener("blur", () => {
    input.style.borderColor = "#fff";
});

// Natija uchun element
const result = document.createElement("div");
result.style.marginTop = "15px";
result.style.padding = "10px";
result.style.fontSize = "18px";
result.style.color = "#d4d4d4";
result.style.borderRadius = "8px";
result.style.width = "100%";
result.style.maxWidth = "500px";
result.style.wordWrap = "break-word"; // Uzun javoblarni kesish

// Inputdagi o'zgarishlarni tinglash
input.addEventListener("input", (e) => {
    const query = e.target.value.trim();
    console.clear(); // Har safar inputni yangilashda konsolni tozalash
    console.log("Kiritilgan savol:", query); // Kiritilgan savolni konsolga chiqarish

    if (query) {
        const bestMatch = findBestMatch(query);
        console.log("Eng yaqin savol:", bestMatch); // Eng yaqin savolni konsolga chiqarish
        result.textContent = `Javob: ${questionsAndAnswers[bestMatch] || "Mos savol topilmadi"}`;
    } else {
        result.textContent = "";
    }
});

// Tugma: inputni tozalash
const clearButton = document.createElement("button");
clearButton.textContent = "Clean";
clearButton.style.padding = "8px 16px";
clearButton.style.marginTop = "10px";
clearButton.style.fontSize = "16px";
clearButton.style.borderRadius = "30px";
clearButton.style.border = "none";
clearButton.style.backgroundColor = "transparent";
clearButton.style.color = "rgba(0, 0, 0, 0.01)";
clearButton.style.cursor = "pointer";

// Tugmani bosish natijasida inputni tozalash
clearButton.addEventListener("click", () => {
    input.value = ""; // Inputni tozalash
    result.textContent = ""; // Natijani tozalash
    console.clear(); // Konsolni tozalash
});

// Tanlangan matnni olish
document.addEventListener("mouseup", () => {
    const selectedText = window.getSelection().toString().trim();
    if (selectedText) {
        input.value = selectedText; // Input maydoniga tanlangan matnni joylashtirish
        const bestMatch = findBestMatch(selectedText);
        result.textContent = `Javob: ${questionsAndAnswers[bestMatch] || "Mos savol topilmadi"}`;
    }
});
if (!document.styleSheets.length) {
    const style = document.createElement("style");
    document.head.appendChild(style);
}
document.styleSheets[0].insertRule("::selection { background-color: transparent; color: inherit; }", 0);
// Scroll hodisasi: input va natijani tozalash
window.addEventListener("scroll", () => {
    input.value = ""; // Inputni tozalash
    result.textContent = ""; // Natijani tozalash
});

// Natijani input tagiga joylash
inputContainer.appendChild(input);
inputContainer.appendChild(result);
inputContainer.appendChild(clearButton);
document.body.appendChild(inputContainer);

